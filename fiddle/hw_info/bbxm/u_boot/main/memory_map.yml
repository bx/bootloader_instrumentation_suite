regions:
  ROM:
    type: "readonly"
    addresses: [0x40000000, 0x4001C000]
  RAM:
    addresses: [0x40200000, 0x40210000]
    type: "bookkeeping"
    include_children: True
    subregions:
      top:
        addresses: [0x40200000, 0x4020f840]
      cpy_clk_code:
        type: "future"
        addresses: [0x4020f840, "0x4020f840 + lowlevel_init - cpy_clk_code"]
        comment: "double-check end address, i thought it copies from go_to_speed"
      spl:
        type: "readonly"
        addresses: ["0x4020f840 + lowlevel_init - cpy_clk_code", "CONFIG_SYS_INIT_SP_ADDR - 0x40"]
        subregions:
          main_heap:
            type: "readonly"
            addresses: ["CONFIG_SYS_INIT_SP_ADDR - 0x40 - GD_SIZE - CONFIG_SYS_MALLOC_F_LEN", "CONFIG_SYS_INIT_SP_ADDR - 0x40 - GD_SIZE - 0x2"]
            #gd->malloc_base = 0x4020fa10
          main_gd:
            type: "patching"
            addresses: ["CONFIG_SYS_INIT_SP_ADDR - 0x40 - GD_SIZE - 0x2", "CONFIG_SYS_INIT_SP_ADDR - 0x40 - 0x2"]
          main_stack:
            type: "stack"
            addresses: "remainder"
      rest:
        addresses: "remainder"
        type: "stack"
  SRAM0:
    type: "bookkeeping"
    addresses: [0x80000000, 0xc0000000]
    include_children: True
    subregions:
      main_image:
        addresses: [0x80100000, ".bss_start.start"]
        subregions:
          text:
            addresses: [0x80100000, ".rodata.start"]
          rodata:
            addresses: [".rodata.start", ".data.start"]
          rwdata:
            addresses: [".data.start", "__rel_dyn_start"]
          rest:
            addresses: "remainder"
      reldyn:
        addresses: ["__rel_dyn_start", "__rel_dyn_end"]
      mainbss:
        addresses: ["__rel_dyn_end", "__bss_end"]
      rest:
        type: "readonly"
        addresses: "remainder"
  SRAM1:
    type: "readonly"
    include_children: True
    subregions:
      subsequent_stage_image:
        type: "future"
        addresses: [0x80000000,0x9d000000]
        comment: "an estimate for now"
      stack:
        addresses: [0x9d000000, 0x9ef3feb0]
      irq_stack:
        addresses: [0x9ef3fec0, 0x9ef3fed0]
      new_gd:
        addresses: [0x9ef3fed0, 0x9ef3ffa8]
      gd:
        addresses: [0x9ef3ffa8, 0x9ef40000]
      heap:
        addresses: [0x9ef40000, 0x9ff60000]
      uboot_image:
        addresses: [0x9ff60000, 0x9fff0000]
        type: "future"
        include_children: True
        subregions:
          text:
            addresses: "SRAM0.main_image.text.1_relocated"
          rodata:
            addresses: "SRAM0.main_image.rodata.1_relocated"
          rwdata:
            addresses: "SRAM0.main_image.rwdata.1_relocated"
          reldyn:
            addresses: "SRAM0.reldyn.1_relocated"
          mainbss:
            addresses: "SRAM0.mainbss.1_relocated"
      tlb:
        addresses: [0x9fff0000, 0xa0000000]

  Registers:
    csv: "regs.csv"
    type: "global"
    include_children: True
  missing_control_padconf0:
    type: "global"
    addresses: [0x48002150, 0x48002154]
    comment: "address written to by boootloader (set_muxconf_regs) must not listed in am37x hardware reference"
  missing_control_padconf1:
    type: "global"
    addresses: [0x48002154, 0x48002158]
    comment: "address written to by boootloader (set_muxconf_regs) must not listed in am37x hardware reference"
  missing_protection_mech_0:
    type: "global"
    addresses: [0x68010060, 0x68010068]
    comment: "address written to by boootloader (secure_unlock_mem) must not listed in am37x hardware reference"
values:
  SCRATCH_SPACE_ADDR: 0x4020E000
  OMAP5_SCRATCH_SPACE_END: 0x4020E028
  ROM_STACK_START: 0x40205cb0
  CONFIG_SYS_INIT_SP_ADDR: 0x4020ff20
  GD_SIZE: 0xd8
  CONFIG_SYS_MALLOC_F_LEN: 0x400

stagename: "main"
